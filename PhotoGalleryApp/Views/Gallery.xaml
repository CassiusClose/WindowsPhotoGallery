<UserControl x:Class="PhotoGalleryApp.Views.Gallery"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PhotoGalleryApp.Views"
             xmlns:converters="clr-namespace:PhotoGalleryApp.Converters"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>

        <converters:HeightARToWidthConverter x:Key="HeightARToWidth"/>

        <!-- Horizontal, wrapping collection of items -->
        <Style x:Key="HorizontalWrapItemsControl" TargetType="ItemsControl">
            <!-- Items stored in a wrap panel -->
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <!-- Horizontal, wrapping list of images -->
        <Style x:Key="GalleryBox" TargetType="ListBox">
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="SelectionMode" Value="Multiple"/>

            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem"> 
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            
            <!-- Each item is a clickable image. Clicking on the image will open it as a new page in the Navigator. -->
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border MaxHeight="{Binding Path=DataContext.ThumbnailHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}}"
                                Margin="3" Background="LightGray">
                            <Border.InputBindings>
                                <MouseBinding MouseAction="LeftClick"
                                              Command="{Binding Path=DataContext.OpenImageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}}"
                                              CommandParameter="{Binding Photo}"/>
                            </Border.InputBindings>
                            <Grid>
                                <!-- Display the image -->
                                <Image MinHeight="{Binding Path=DataContext.ThumbnailHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}}">
                                    <!-- The height is determined above by the gallery settings. Below, calculate the width based on that height and
                                    the image's aspect ratio. -->
                                    <Image.MinWidth>
                                        <MultiBinding Converter="{StaticResource HeightARToWidth}" Mode="OneWay">
                                            <Binding Path="DataContext.ThumbnailHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}"/>
                                            <Binding Path="AspectRatio"/>
                                        </MultiBinding>
                                    </Image.MinWidth>
                                    
                                    <Image.Source>
                                        <Binding Path="Image" Mode="OneWay"/>
                                    </Image.Source>
                                </Image>
                                <!-- Display a selection button on top of the image -->
                                <ToggleButton Grid.ZIndex="1" Width="50" Height="50" HorizontalAlignment="Left" VerticalAlignment="Top" 
                                              Command="{Binding Path=DataContext.SelectImageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}}" 
                                              CommandParameter="{Binding}"
                                              IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}">Sel</ToggleButton>
                                
                            </Grid>
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Wrapping, horizontal collection of current tags, each of which is a clickable string. Clicking removes the tag from the image filter -->
        <Style x:Key="CurrentTagsList" BasedOn="{StaticResource HorizontalWrapItemsControl}" TargetType="ItemsControl">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Button Content="{Binding}"
                                Command="{Binding Path=DataContext.RemoveTagCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}}"
                                CommandParameter="{Binding}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Drop down list of all tags to choose from-->
        <Style x:Key="AllTagsSelector" TargetType="ComboBox">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentPresenter x:Name="Presenter" Content="{Binding}" ContentTemplate="{StaticResource DropDownItem}"/>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBoxItem, AncestorLevel=1}}"
                                         Value="{x:Null}">
                                <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource DropDownSelected}"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- The button that opens & closes the tag drop down list -->
        <Style x:Key="DropDownButton" TargetType="ToggleButton">
            <Setter Property="Padding" Value="7,3,7,3"/>
        </Style>

        <!-- Tag drop down list-->
        <Style x:Key="DropDownList" TargetType="Popup">
            <Setter Property="StaysOpen" Value="False"/>
        </Style>

        <!-- Tags Drop Down item -->
        <DataTemplate x:Key="DropDownItemTemplate">
            <Button Content="{Binding}"
                    Command="{Binding Path=DataContext.AddTagCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}}"
                    CommandParameter="{Binding}">
                <!-- On Click, close the popup -->
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsChecked" Storyboard.Target="{Binding ElementName=showTagList}">
                                    <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
            </Button>
        </DataTemplate>
        
    </UserControl.Resources>
    
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- Gallery's name -->
        <Label Grid.Row="0" FontSize="20" Content="{Binding GalleryName}"/>

        <!-- Gallery Options -->
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Button Command="{Binding AddFilesCommand}">Add Images</Button>
            <Button Command="{Binding SaveGalleryCommand}">Save Gallery</Button>
            <Button CommandParameter="{Binding SelectedItems, ElementName=GalleryImageListBox}" Command="{Binding RemoveImagesCommand}">Remove Selected</Button>
        </StackPanel>

        <!-- Tag Filtering panel -->
        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <!-- Button that opens & closes the drop down list of tags -->
            <ToggleButton x:Name="showTagList" Style="{StaticResource DropDownButton}">Tags</ToggleButton>

            <!-- Drop down list of all tags, selecting adds them to filter -->
            <Popup Style="{StaticResource DropDownList}" 
                   PlacementTarget="{Binding ElementName=showTagList}"
                   IsOpen="{Binding ElementName=showTagList,Path=IsChecked}">
                <ItemsControl ItemsSource="{Binding AllTags}" ItemTemplate="{StaticResource DropDownItemTemplate}"/>
            </Popup>

            <!-- A list of all currently selected tags, clicking removes them -->
            <ItemsControl ItemsSource="{Binding Path=CurrentTags, Mode=OneWay}" Style="{StaticResource CurrentTagsList}"/>
        </StackPanel>

        <!-- Display the images -->
        <ScrollViewer Grid.Row="3" HorizontalScrollBarVisibility="Disabled">
            <!-- Make the ScrollChanged event call a command in the view model. -->
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ScrollChanged">
                    <i:InvokeCommandAction
                        Command="{Binding ScrollChangedCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollViewer}}"
                        />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListBox
                 x:Name="GalleryImageListBox" 
                 Style="{StaticResource GalleryBox}" 
                 ItemsSource="{Binding Path=ImagesView, Mode=OneWay}"/>
        </ScrollViewer>
    </Grid>
</UserControl>
