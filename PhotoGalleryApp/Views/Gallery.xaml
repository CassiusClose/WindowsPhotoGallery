<UserControl x:Class="PhotoGalleryApp.Views.Gallery"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PhotoGalleryApp.Views"
             xmlns:converters="clr-namespace:PhotoGalleryApp.Converters"
             xmlns:vms="clr-namespace:PhotoGalleryApp.ViewModels"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             
             Focusable="True"
             MouseDown="UserControl_MouseDown"
             Loaded="UserControl_Loaded">

    <UserControl.InputBindings>
        <KeyBinding Key="Esc" Command="{Binding EscapePressedCommand}"/>
    </UserControl.InputBindings>

    <UserControl.Resources>
        <converters:HeightARToWidthConverter x:Key="HeightARToWidth"/>

        <Style x:Key="GalleryThumbnailImage" TargetType="Image">
            <Setter Property="MinHeight" Value="{Binding Path=DataContext.ThumbnailHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}}"/>
        </Style>

        <!-- How to display an image -->
        <DataTemplate DataType="{x:Type vms:ImageViewModel}">
            <Border BorderThickness="0" BorderBrush="Green">
                <Image Style="{StaticResource GalleryThumbnailImage}" Stretch="Uniform">
                    <!-- The height is determined above by the gallery settings. Below, calculate the width based on that height and
                                    the image's aspect ratio. -->
                    <Image.MinWidth>
                        <MultiBinding Converter="{StaticResource HeightARToWidth}" Mode="OneWay">
                            <Binding Path="DataContext.ThumbnailHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}"/>
                            <Binding Path="AspectRatio"/>
                        </MultiBinding>
                    </Image.MinWidth>

                    <Image.Source>
                        <Binding Path="ImageData" Mode="OneWay"/>
                    </Image.Source>
                </Image>
            </Border>
        </DataTemplate>

        <!-- How to display an video -->
        <DataTemplate DataType="{x:Type vms:VideoViewModel}">
            <Image Style="{StaticResource GalleryThumbnailImage}">
                <Image.MinWidth>
                    <MultiBinding Converter="{StaticResource HeightARToWidth}" Mode="OneWay">
                        <Binding Path="DataContext.ThumbnailHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}"/>
                        <Binding Path="ThumbnailViewModel.AspectRatio"/>
                    </MultiBinding>
                </Image.MinWidth>

                <Image.Source>
                    <Binding Path="ThumbnailViewModel.ImageData" Mode="OneWay"/>
                </Image.Source>
            </Image>
        </DataTemplate>

        <!-- Horizontal, wrapping collection of items -->
        <Style x:Key="HorizontalWrapItemsControl" TargetType="ItemsControl">
            <!-- Items stored in a wrap panel -->
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <!-- Horizontal, wrapping list of images -->
        <Style x:Key="GalleryBox" TargetType="ListBox">
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="SelectionMode" Value="Multiple"/>
            <Setter Property="Padding" Value="0"/>

            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>

            <!-- Each item is a clickable image. Clicking on the image will open it as a new page in the Navigator. -->
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border Margin="0,0,0,0" Padding="0,0,0,0" Background="LightGray" BorderThickness="0">
                            <Border.InputBindings>
                                <MouseBinding MouseAction="LeftClick"
                                              Command="{Binding Path=DataContext.OpenMediaCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}}"
                                              CommandParameter="{Binding Media}"/>
                            </Border.InputBindings>
                            <Grid>
                                <!-- Display the image -->
                                <ContentControl Content="{Binding}" Padding="0" Margin="0"/>
                                <!-- Display a selection button on top of the image -->
                                <ToggleButton Grid.ZIndex="1" Width="50" Height="50" HorizontalAlignment="Left" VerticalAlignment="Top" 
                                              Command="{Binding Path=DataContext.SelectMediaCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}}" 
                                              CommandParameter="{Binding}"
                                              IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}">Sel</ToggleButton>
                                
                            </Grid>
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Wrapping, horizontal collection of current tags, each of which is a clickable string. Clicking removes the tag from the image filter -->
        <Style x:Key="FilterTagsList" BasedOn="{StaticResource HorizontalWrapItemsControl}" TargetType="ItemsControl">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Button Content="{Binding}"
                                Command="{Binding Path=DataContext.RemoveTagCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}}"
                                CommandParameter="{Binding}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <!-- Transparent background allows for mouse events to be captured --> 
    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- Gallery's name -->
        <Label Grid.Row="0" FontSize="20" Content="{Binding GalleryName}"/>

        <!-- Gallery Options -->
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Button Command="{Binding AddFilesCommand}">Add Images</Button>
            <Button Command="{Binding SaveGalleryCommand}">Save Gallery</Button>
            <Button CommandParameter="{Binding SelectedItems, ElementName=GalleryImageListBox}" Command="{Binding RemoveMediaCommand}">Remove Selected</Button>
            <local:ChooserDropDown ItemsSource="{Binding AllTags}" 
                                   ShowCreateButton="True" ButtonText="Add Tag to Selected"
                                   IsEnabled="{Binding MediaSelected}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ItemSelected">
                        <ei:CallMethodAction TargetObject="{Binding}" MethodName="AddTagToSelected"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </local:ChooserDropDown>
            <local:ChooserDropDown ItemsSource="{Binding AllTags}"
                                   ButtonText="Remove Tag from Selected"
                                   IsEnabled="{Binding MediaSelected}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ItemSelected">
                        <ei:CallMethodAction TargetObject="{Binding}" MethodName="RemoveTagFromSelected"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </local:ChooserDropDown>
        </StackPanel>

        <!-- Tag Filtering panel -->
        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <!-- Drop down list that lets you add tags to the filter -->
            <local:ChooserDropDown ItemsSource="{Binding AllTags}" ButtonText="Add Tag to Filter">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ItemSelected">
                        <ei:CallMethodAction TargetObject="{Binding}" MethodName="AddTagToFilter"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </local:ChooserDropDown>


            <!-- A list of all currently selected tags, clicking removes them -->
            <ItemsControl ItemsSource="{Binding Path=FilterTags, Mode=OneWay}" Style="{StaticResource FilterTagsList}"/>
        </StackPanel>

        <!-- Display the images -->
        <ScrollViewer Name="ImagesScrollViewer" Grid.Row="3" HorizontalScrollBarVisibility="Disabled" PreviewMouseWheel="ScrollViewer_MouseWheel">
            <!--
            Make the ScrollChanged event call a command in the view model.
            Gotten from https://stackoverflow.com/questions/25809655/wpf-mvvm-binding-command-to-event 
            -->
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ScrollChanged">
                    <i:InvokeCommandAction
                        Command="{Binding ScrollChangedCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollViewer}}"
                    />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListBox
                 x:Name="GalleryImageListBox" 
                 Style="{StaticResource GalleryBox}" 
                 ItemsSource="{Binding Path=ImagesView, Mode=OneWay}"
                >
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="MinHeight" Value="{Binding Path=DataContext.ThumbnailHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}}"/>
                        <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>


            <!--<Setter Property="ItemContainerStyle">
                <Setter.Value>
                    
                </Setter.Value>
            </Setter>-->

        </ScrollViewer>
    </Grid>
</UserControl>
