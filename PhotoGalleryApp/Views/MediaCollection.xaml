<UserControl x:Class="PhotoGalleryApp.Views.MediaCollection"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PhotoGalleryApp.Views"
             xmlns:ei="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:converters="clr-namespace:PhotoGalleryApp.Converters"
             xmlns:vms="clr-namespace:PhotoGalleryApp.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Loaded="UserControl_Loaded"
             SizeChanged="UserControl_SizeChanged">

    <UserControl.Resources>
        <converters:HeightARToWidthConverter x:Key="HeightARToWidth"/>

        <Style x:Key="CollectionThumbnailImage" TargetType="Image">
            <Setter Property="MinHeight" Value="{Binding Path=DataContext.ThumbnailHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MediaCollection}}}"/>
        </Style>

        <Style TargetType="local:MediaCollection">
            <Setter Property="ThumbnailHeight" Value="{Binding ThumbnailHeight}"/>
        </Style>


        <!-- How to display an event -->
        <DataTemplate DataType="{x:Type vms:EventTileViewModel}">
            <Grid>
                <Image Style="{StaticResource CollectionThumbnailImage}">
                    <Image.Source>
                        <Binding Path="Thumbnail.ImageData" Mode="OneWay"/>
                    </Image.Source>
                </Image>

                <Border
                    Grid.ZIndex="1"
                    Background="White"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Margin="10"
                    BorderBrush="Black"
                    BorderThickness="2"
                    Padding="5"
                    >
                    <Label Content="{Binding Name}"/>
                </Border>
            </Grid>
        </DataTemplate>

        <!-- How to display an image -->
        <DataTemplate DataType="{x:Type vms:ImageViewModel}">
            <Grid>
                <!-- Display the image -->
                <Image Style="{StaticResource CollectionThumbnailImage}" Stretch="Uniform">
                    <Image.Source>
                        <Binding Path="ImageData" Mode="OneWay"/>
                    </Image.Source>
                </Image>

                <!-- Display a selection button on top of the image -->
                <ToggleButton Grid.ZIndex="1" Width="50" Height="50" HorizontalAlignment="Left" VerticalAlignment="Top" 
                              Command="{Binding Path=DataContext.SelectMediaCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MediaCollection}}}" 
                              CommandParameter="{Binding}"
                              IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}">Sel</ToggleButton>

            </Grid>
        </DataTemplate>

        <!-- How to display an video -->
        <DataTemplate DataType="{x:Type vms:VideoViewModel}">
            <Grid>
                <Image Style="{StaticResource CollectionThumbnailImage}">
                    <Image.Source>
                        <Binding Path="ThumbnailViewModel.ImageData" Mode="OneWay"/>
                    </Image.Source>
                </Image>

                <!-- Display a selection button on top of the image -->
                <ToggleButton Grid.ZIndex="1" Width="50" Height="50" HorizontalAlignment="Left" VerticalAlignment="Top" 
                              Command="{Binding Path=DataContext.SelectMediaCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MediaCollection}}}" 
                              CommandParameter="{Binding}"
                              IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}">Sel</ToggleButton>

            </Grid>
        </DataTemplate>

        <!-- Horizontal, wrapping list of images -->
        <Style x:Key="CollectionListBoxStyle" TargetType="ListBox">
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="SelectionMode" Value="Multiple"/>
            <Setter Property="Padding" Value="0"/>

            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            
            <!-- Each item is a clickable image. Clicking on the image will open it as a new page in the Navigator. -->
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border Margin="0,0,0,0" Padding="0,0,0,0" Background="LightGray" BorderThickness="0">
                            <Border.InputBindings>
                                <MouseBinding MouseAction="LeftClick"
                                              Command="{Binding Path=DataContext.OpenMediaCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MediaCollection}}}"
                                              CommandParameter="{Binding}"/>
                            </Border.InputBindings>
                            <!-- Display the image -->
                            <ContentControl Content="{Binding}" Padding="0" Margin="0"/>
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        
    </UserControl.Resources>


    <ScrollViewer 
        Grid.Row="3" 
        Name="MediaScrollViewer" 
        HorizontalScrollBarVisibility="Disabled" 
        PreviewMouseWheel="ScrollViewer_MouseWheel"
        >
        <!--
        Make the ScrollChanged event call a command in the view model.
        Gotten from https://stackoverflow.com/questions/25809655/wpf-mvvm-binding-command-to-event 
        -->
        <ei:Interaction.Triggers>
            <ei:EventTrigger EventName="ScrollChanged">
                <ei:InvokeCommandAction
                    Command="{Binding ScrollChangedCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollViewer}}"
                />
            </ei:EventTrigger>
        </ei:Interaction.Triggers>
        <ListBox
             x:Name="CollectionListBox" 
             Style="{StaticResource CollectionListBoxStyle}" 
             ItemsSource="{Binding Path=MediaView, Mode=OneWay}"
            >
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="MinHeight" Value="{Binding Path=DataContext.ThumbnailHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MediaCollection}}}"/>
                    <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
    </ScrollViewer>
</UserControl>
