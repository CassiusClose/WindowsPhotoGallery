<UserControl x:Class="PhotoGalleryApp.Views.EvenWrapPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PhotoGalleryApp.Views"
             xmlns:vms="clr-namespace:PhotoGalleryApp.ViewModels"
             xmlns:converters="clr-namespace:PhotoGalleryApp.Converters"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <converters:HeightARToWidthConverter x:Key="HeightARToWidth"/>
        
        <Style x:Key="GalleryThumbnailImage" TargetType="Image">
            <Setter Property="MinHeight" Value="{Binding Path=DataContext.ThumbnailHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}}"/>
        </Style>

        <!-- How to display an image -->
        <DataTemplate DataType="{x:Type vms:ImageViewModel}">
            <Image Style="{StaticResource GalleryThumbnailImage}">
                <!-- The height is determined above by the gallery settings. Below, calculate the width based on that height and
                                    the image's aspect ratio. -->
                <Image.MinWidth>
                    <MultiBinding Converter="{StaticResource HeightARToWidth}" Mode="OneWay">
                        <Binding Path="DisplayHeight"/>
                        <Binding Path="AspectRatio"/>
                    </MultiBinding>
                </Image.MinWidth>
                <Image.MaxWidth>
                    <MultiBinding Converter="{StaticResource HeightARToWidth}" Mode="OneWay">
                        <Binding Path="DisplayHeight"/>
                        <Binding Path="AspectRatio"/>
                    </MultiBinding>
                </Image.MaxWidth>

                <Image.Source>
                    <Binding Path="ImageData" Mode="OneWay"/>
                </Image.Source>
            </Image>
        </DataTemplate>

        <!-- How to display an video -->
        <DataTemplate DataType="{x:Type vms:VideoViewModel}">
            <Image Style="{StaticResource GalleryThumbnailImage}">
                <Image.MinWidth>
                    <MultiBinding Converter="{StaticResource HeightARToWidth}" Mode="OneWay">
                        <Binding Path="DisplayHeight"/>
                        <Binding Path="ThumbnailViewModel.AspectRatio"/>
                    </MultiBinding>
                </Image.MinWidth>
                <Image.MaxWidth>
                    <MultiBinding Converter="{StaticResource HeightARToWidth}" Mode="OneWay">
                        <Binding Path="DisplayHeight"/>
                        <Binding Path="ThumbnailViewModel.AspectRatio"/>
                    </MultiBinding>
                </Image.MaxWidth>

                <Image.Source>
                    <Binding Path="ThumbnailViewModel.ImageData" Mode="OneWay"/>
                </Image.Source>
            </Image>
        </DataTemplate>


        <!-- The style for each drop-down list item -->
        <Style TargetType="ListBoxItem">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ItemClickedOn"/>
        </Style>

    </UserControl.Resources>
    
    <Grid>
        <!-- Display the images -->
        <ScrollViewer x:Name="EvenWrapPanel_ScrollViewer" Grid.Row="3" HorizontalScrollBarVisibility="Disabled" PreviewMouseWheel="ScrollViewer_MouseWheel"
                      local:ScrollStoppedBehavior.DetectScrollStopped="True">
            <!--
        Make the ScrollChanged event call a command in the view model.
        Gotten from https://stackoverflow.com/questions/25809655/wpf-mvvm-binding-command-to-event 
        -->
            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="ScrollChanged">
                    <i:InvokeCommandAction
                    Command="{Binding ScrollChangedCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollViewer}}"
                />
                </i:EventTrigger>
            </i:Interaction.Triggers>-->
            <ListBox
                x:Name="GalleryImageListBox" 
                ItemsSource="{Binding ItemsSource, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:EvenWrapPanel}}}"
                SelectionMode="Multiple"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <!-- MaxHeight="{Binding Path=DataContext.ThumbnailHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}}" -->
                        <Border MaxHeight="{Binding BorderHeight}"
                                Margin="3" Background="LightGray">
                            <Grid>
                                <!-- Display the image -->
                                <ContentControl Content="{Binding}"/>
                                <!-- Display a selection button on top of the image -->
                                <!--<ToggleButton Grid.ZIndex="1" Width="50" Height="50" HorizontalAlignment="Left" VerticalAlignment="Top" 
                                              Command="{Binding Path=DataContext.SelectMediaCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Gallery}}}" 
                                              CommandParameter="{Binding}"
                                              IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}">Sel</ToggleButton>-->

                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

        </ScrollViewer>
    </Grid>
</UserControl>
